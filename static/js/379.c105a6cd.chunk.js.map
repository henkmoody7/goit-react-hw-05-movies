{"version":3,"file":"static/js/379.c105a6cd.chunk.js","mappings":"6QAEaA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,EAASD,EAAMC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,GAAjB,IAC7BC,EAA+DL,EAA/DK,MAAOC,EAAwDN,EAAxDM,cAAeC,EAAyCP,EAAzCO,aAAcC,EAA2BR,EAA3BQ,aAAcC,EAAaT,EAAbS,SAC1D,OACE,iCACE,gBACEC,IAAG,yCAAoCJ,GACvCK,IAAKN,KAEP,4BACE,0BACGA,EADH,KACYO,OAAOC,SAASN,GAD5B,QAGA,yCAAwC,GAAvBK,OAAOJ,IAAoBM,QAAQ,GAApD,QACA,qCACA,uBAAIL,KACJ,mCACA,uBAAIR,QAEN,oDACA,SAAC,KAAD,CAAMc,GAAE,OAAR,mBACA,SAAC,KAAD,CAAMA,GAAE,UAAR,uBAGL,ECtBYC,EAAe,WAC1B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOjB,EAAP,KAAckB,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAXAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEyBC,EAAAA,EAAAA,IAAkBH,GAF3C,OAESI,EAFT,OAGGL,EAASK,GAHZ,gDAKGC,MAAM,yCALT,wDAAD,EAQD,GAAE,CAACL,IAECnB,GAGH,iCACE,SAACD,EAAD,CAAWC,MAAOA,KAClB,SAAC,EAAAyB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,SANa,IAUpB,C","sources":["components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const MovieInfo = ({ movie }) => {\n  const genres = movie.genres.map(genre => genre.name + ' ');\n  const { title, backdrop_path, release_date, vote_average, overview } = movie;\n  return (\n    <>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\n        alt={title}\n      />\n      <div>\n        <h2>\n          {title} ({Number.parseInt(release_date)})\n        </h2>\n        <p>User score: {(Number(vote_average) * 10).toFixed(0)}%</p>\n        <b>Overview</b>\n        <p>{overview}</p>\n        <b>Genres</b>\n        <p>{genres}</p>\n      </div>\n      <h3>Additional information</h3>\n      <Link to={`cast`}>Cast</Link>\n      <Link to={`reviews`}>Reviews</Link>\n    </>\n  );\n};\n","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'components/api';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    (async () => {\n      try {\n        const details = await fetchMovieDetails(movieId);\n        setMovie(details);\n      } catch (error) {\n        alert('Oops, something went wrong, try again');\n      }\n    })();\n  }, [movieId]);\n\n  if (!movie) return null;\n\n  return (\n    <>\n      <MovieInfo movie={movie}></MovieInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n"],"names":["MovieInfo","movie","genres","map","genre","name","title","backdrop_path","release_date","vote_average","overview","src","alt","Number","parseInt","toFixed","to","MovieDetails","useState","setMovie","movieId","useParams","useEffect","fetchMovieDetails","details","alert","Suspense","fallback"],"sourceRoot":""}