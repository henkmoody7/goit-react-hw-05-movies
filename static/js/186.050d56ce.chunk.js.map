{"version":3,"file":"static/js/186.050d56ce.chunk.js","mappings":"+PAIaA,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEyBC,EAAAA,EAAAA,IAAkBN,GAF3C,OAESG,EAFT,OAGGC,EAAWD,EAAQI,SAHtB,gDAKGC,MAAM,yCALT,wDAAD,EAQD,GAAE,CAACR,IAECG,GAKH,uBACGA,EAAQM,OAAS,EACdN,EAAQO,KAAI,SAAAC,GAAM,OAChB,4BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFHF,EAAOG,GADD,IAMlB,6CAZC,IAeV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchMovieReviews } from 'components/api';\nimport { useParams } from 'react-router-dom';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const reviews = await fetchMovieReviews(movieId);\n        setReviews(reviews.results);\n      } catch (error) {\n        alert('Oops, something went wrong, try again');\n      }\n    })();\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <p>\n      {reviews.length > 0\n        ? reviews.map(review => (\n            <div key={review.id}>\n              <b>{review.author}</b>\n              <p>{review.content}</p>\n            </div>\n          ))\n        : \"We don't have any reviews for this movie\"}\n    </p>\n  );\n};\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","results","alert","length","map","review","author","content","id"],"sourceRoot":""}